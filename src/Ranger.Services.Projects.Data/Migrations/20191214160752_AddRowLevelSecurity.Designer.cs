// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ranger.Services.Projects.Data;

namespace Ranger.Services.Projects.Data.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    [Migration("20191214160752_AddRowLevelSecurity")]
    partial class AddRowLevelSecurity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FriendlyName")
                        .HasColumnName("friendly_name")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnName("xml")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_data_protection_keys");

                    b.ToTable("data_protection_keys");
                });

            modelBuilder.Entity("Ranger.Services.Projects.Data.ProjectStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnName("data")
                        .HasColumnType("jsonb");

                    b.Property<string>("DatabaseUsername")
                        .IsRequired()
                        .HasColumnName("database_username")
                        .HasColumnType("text");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnName("event")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnName("inserted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InsertedBy")
                        .IsRequired()
                        .HasColumnName("inserted_by")
                        .HasColumnType("text");

                    b.Property<Guid>("StreamId")
                        .HasColumnName("stream_id")
                        .HasColumnType("uuid");

                    b.Property<int>("Version")
                        .HasColumnName("version")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_project_streams");

                    b.ToTable("project_streams");
                });

            modelBuilder.Entity("Ranger.Services.Projects.Data.ProjectUniqueConstraint", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnName("project_id")
                        .HasColumnType("uuid");

                    b.Property<string>("DatabaseUsername")
                        .IsRequired()
                        .HasColumnName("database_username")
                        .HasColumnType("text");

                    b.Property<string>("HashedLiveApiKey")
                        .IsRequired()
                        .HasColumnName("hashed_live_api_key")
                        .HasColumnType("text");

                    b.Property<string>("HashedTestApiKey")
                        .IsRequired()
                        .HasColumnName("hashed_test_api_key")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(140)")
                        .HasMaxLength(140);

                    b.HasKey("ProjectId")
                        .HasName("pk_project_unique_constraints");

                    b.HasIndex("DatabaseUsername", "HashedLiveApiKey")
                        .IsUnique();

                    b.HasIndex("DatabaseUsername", "HashedTestApiKey")
                        .IsUnique();

                    b.HasIndex("DatabaseUsername", "Name")
                        .IsUnique();

                    b.ToTable("project_unique_constraints");
                });

            modelBuilder.Entity("Ranger.Services.Projects.ProjectUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DatabaseUsername")
                        .IsRequired()
                        .HasColumnName("database_username")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnName("inserted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InsertedBy")
                        .IsRequired()
                        .HasColumnName("inserted_by")
                        .HasColumnType("text");

                    b.Property<Guid>("ProjectId")
                        .HasColumnName("project_id")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("user_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_project_users");

                    b.HasIndex("ProjectId", "Email")
                        .IsUnique();

                    b.HasIndex("ProjectId", "UserId")
                        .IsUnique();

                    b.ToTable("project_users");
                });
#pragma warning restore 612, 618
        }
    }
}
